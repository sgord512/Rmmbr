Rmmbr is a command-line utility program that allows you to create and manage to-do lists.

Currently it does not have any functionality as I had to tear it apart to get the command-line parsing back in shape. But now that this is fixed, I can go ahead and put the rest in place.

Ok, so I did a little bit more work, but it still lacks functionality.

TODOs:

figure out why GHC generates weird files when you specify -outputdir

Ok, so I cleaned up a lot.

It all now pretty much works as I want it to.

But I have to think about the design of the program a lot more now.


Remove:

So there should be a way to remove with a single command.
Maybe remove last, first, with different lists.
Maybe remove all by date, importance, (regexp?)

There should be a way to remove interactively and a way to do it non-interactively.

They should be seperate commands.
Interactively numbers them all, and lets you remove by number.
Can you do ranges,yes.

Adding should be easy.
Creating should be easy.

how do I deal with sort Order? I have no idea.

ok, for add, I can just take in all the arguments, and do a mapM on them, to add them all.

------------------------------------------------------------------------------------------------------------------------

I now have add and create and present working pretty much as I would like them to. I next should work on remove, which is absolutely the most complicated command.

I should also make it so that you don't have to use a flag to specify a list when doing create, add, or show.

I can probably use ReturnInOrder and the Options type to get that done.

Wow, this is getting very close to completion.

I should think about all that config-file stuff. Should I keep it? Fix it? Make a seperate module for config related stuff?
(At the very least, I should rewrite it, because it is very very ugly, and inefficient.

------------------------------------------------------------------------------------------------------------------------

Also, I am having a weird issue where ghc generates a stupendously long list of warnings during linking. This causes the make to fail, but it works fine if I symlink my toolbox in, and then make it in ghc.
